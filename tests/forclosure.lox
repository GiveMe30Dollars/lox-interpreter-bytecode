// This tests the closure of loop variables, 
// particularly in combination with break and continue

// Modification of inner variable
var closure;
for (var i = 1; i <= 5; i += 1){
    if (i == 2){
        i += 1;
        continue;
    }
    if (i == 4){
        closure = fun (n) {i * n};
        break;
    }
    print i;
}
print closure(4);
// Expect: 1, 16


// Closure test for inner variable
var twoMult;
var tenMult;
for (var i = 1; i <= 10; i *= 5){
    if (i == 1){
        i = 2;
        twoMult = fun(n) {i * n};
        continue;
    }
    if (i == 10) {
        tenMult = fun(n) {i * n};
        break;
    }
}
print twoMult(8);     // Expect: 16
print tenMult(10);    // Expect: 100


// Closure test for local variables in loop
var global;
for (;;){
    var a = 3;
    var closure = fun(n) {a * n};
    global = closure;
    break;
}

{
    var b = 4;        // This overwrites the stack slot where 'a' used to be
    print global(5);  // Expect: 15
}