// This is a test for break and return statements

/*
{
    var outer = 0;
    while (outer < 5){
        var a = "a";
        var b = "b";
        if (outer == 2){
            outer = outer + 1;
            continue;
        }
        if (outer == 4) break;
        print outer;
        outer = outer + 1;
    }
}*/

// Expect: 0, 1, 3

/*
{
    var outer;
    for (var i = 0; i < 5; i += 1){
        var a = "a";
        var b = "b";
        {
            var c = "c";
            if (i == 2) continue;
        }
        var d = "d";
        if (i == 4) break;
        print i;
    }
}
*/
// Expect: 0, 1, 3

/*
var acc = 0;
for (var i = 0; i <= 10; i += 1){
    if (i == 2) continue;
    for (var j = 0; j <= 5; j += 1){
        acc += 1;
        if (i != j) continue;
        print i*j;
        acc += i*j;
    }
    if (i == 5) break;
}
print acc;
*/
// Expect: 0, 1, 9, 16, 25, 81

/*
var found = nil;
var accum = 0;
for (var i = 1; i <= 5; i += 1){
    for (var j = 1; j <= 5; j += 1){
        accum += 1;
        // found when i = 3, j = 4
        if (i*j == 12){
            found = true;
            break;
        }
    }
    if (found) break;
}
print accum;
*/
// Expect: 14

/*
fun fac(n){
    // Returns the 5th factorial if n is a number
    // (ignore strings for this testcase shhhhh)
    for(var i = 0; i < 5; i += 1){
        if (n == nil) break;
        if (n == true) break;
        if (n == false) break;
        if (i == 0){
            n = 1;
            continue;
        }
        n *= i;
    }
    return n;
}
print fac(nil);
print fac(true);
print fac(false);
print fac(100);
*/
// Expect: nil, true, false, 60