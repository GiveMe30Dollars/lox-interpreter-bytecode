fun fib(n){
    if (n <= 1) return n;
    return fib(n - 2) + fib(n - 1);
}

var start = clock();
print fib;
print fib(30);
var end = clock();
print "Time Elapsed (s):";
print (end - start);

// The following is a general benchmark on the performance of the interpreter.
// For fib(30) == 832040,
// the AST-based implemetation took ~100 seconds
// the bytecode implemetation took ~0.7 seconds without DEBUG_TRACE_EXECUTION
// with addition of nonclosure checking, time = 0.739s

// fib(40) = 1.02334e+08 takes 88.5 - 92.2s with optional closures
// fib(40) = 1.02334e+08 takes 88.5 - 100.2s  without optional closures